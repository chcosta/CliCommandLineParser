parameters:
  agentOs: $(agentOs)
  queue: $(queue)

phases:
  - phase: ${{ parameters.agentOs }}
    queue: ${{ parameters.queue }}
    steps:
    - ${{ if ne(variables['Build.Reason'], 'PullRequest') }}:
      - task: ms-vseng.MicroBuildTasks.30666190-6959-11e5-9f96-f56098202fef.MicroBuildSigningPlugin@1
        displayName: Install Signing Plugin
        inputs:
          signType: '$(PB_SignType)'
        condition: and(succeeded(), in(variables['PB_SignType'], 'real', 'test'))

    - ${{ if eq(parameters.agentOs, 'Windows_NT') }}:
      - script: build\CIBuild.cmd 
                  -configuration %BuildConfig%
                  /p:PB_PublishBlobFeedKey=%BlobFeedKey%
                  /p:PB_PublishBlobFeedUrl=%BlobFeedUrl%
        displayName: Build
        env:
          BuildConfig: $(_BuildConfig)
          BlobFeedKey: $(PB_PublishBlobFeedKey)
          BlobFeedUrl: $(PB_PublishBlobFeedUrl)

    - ${{ if in(parameters.agentOs, 'Linux', 'MacOS') }}:
      - script: build/cibuild.sh 
                  --configuration $BuildConfig
                  /p:PB_PublishBlobFeedKey=$BlobFeedKey
                  /p:PB_PublishBlobFeedUrl=$BlobFeedUrl
        displayName: Build
        env:
          BuildConfig: $(_BuildConfig)
          BlobFeedKey: $(PB_PublishBlobFeedKey)
          BlobFeedUrl: $(PB_PublishBlobFeedUrl)

    - ${{ if ne(variables['Build.Reason'], 'PullRequest') }}:   
      - task: PublishTestResults@1
        displayName: Publish Test Results
        inputs:
          testRunner: XUnit
          testResultsFiles: '**\*.xml'
          searchFolder: '$(Build.SourcesDirectory)\artifacts\$(_BuildConfig)\TestResults'
          testRunTitle: 'Unit Test Results'
          platform: '$(BuildPlatform)'
          configuration: '$(_BuildConfig)'
        condition: and(succeededOrFailed(), ne(variables['PB_SkipTests'], 'true'))

      - task: CopyFiles@2
        displayName: Stage Build Artifacts
        inputs:
          SourceFolder: '$(Build.SourcesDirectory)'
          Contents: |
           artifacts\$(_BuildConfig)\bin\**\*
           artifacts\$(_BuildConfig)\log\**\*
           artifacts\$(_BuildConfig)\packages\**\*
           artifacts\$(_BuildConfig)\TestResults\**\*
          TargetFolder: '$(Build.ArtifactStagingDirectory)'
        condition: and(succeededOrFailed(), in(variables['PB_PublishType'], 'drop', 'blob'))

      - task: PublishBuildArtifacts@1
        displayName: Publish Build Artifacts
        inputs:
          PathtoPublish: '$(Build.ArtifactStagingDirectory)\artifacts\$(_BuildConfig)'
          ArtifactName: '$(Build.BuildNumber)'
          publishLocation: FilePath
          TargetPath: '$(DropRoot)\$(TeamName)\$(Build.DefinitionName)'
        condition: and(succeededOrFailed(), in(variables['PB_PublishType'], 'drop', 'blob'))

      - task: ms-vseng.MicroBuildTasks.521a94ea-9e68-468a-8167-6dcf361ea776.MicroBuildCleanup@1
        displayName: Perform Cleanup Tasks
        condition: always()
